{"version":3,"file":"static/webpack/static/development/pages/index.js.37ddebafdc1398f94b06.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React from 'react';\nimport fetch from 'node-fetch';\nimport Cookiez from 'next-cookies';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport { Redirect } from 'react-router-dom';\nimport LoginView from '../src/pages/Login/LoginView';\nimport { useRouter } from 'next/router';\n\nfunction handleSuccessfulLogin(router) {\n  return function(loginResult) {\n    document.cookie = `GofarDashboardUserId=${loginResult.userId};`\n    document.cookie = `GofarDashboardToken=${loginResult.authToken};`\n    router.push('/dashboard');\n  };\n}\n\nexport default function LoginPage(props) {\n  if (props.authToken) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n\n  const router = useRouter();\n\n  const client = new ApolloClient({\n    uri:\n      'https://jt63wdhqqre6rpjo5lnylfhjqm.appsync-api.ap-southeast-2.amazonaws.com/graphql',\n    headers: {\n      Authorization: props.authToken,\n      'X-API-KEY': 'da2-d5trhzrnqraznclr2teue2bmmu',\n    },\n    fetch,\n  });\n  return (\n    <ApolloProvider client={client}>\n      <LoginView\n        {...props}\n        handleSuccessfulLogin={handleSuccessfulLogin(router)}\n      />\n    </ApolloProvider>\n  );\n}\n\nLoginPage.getInitialProps = ctx => {\n  return {\n    cookiez: Cookiez(ctx) || '',\n  };\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AAPA;AASA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AADA;AAGA;;;;A","sourceRoot":""}