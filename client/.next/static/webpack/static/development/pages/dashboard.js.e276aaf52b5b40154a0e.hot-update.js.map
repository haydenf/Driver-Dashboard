{"version":3,"file":"static/webpack/static/development/pages/dashboard.js.e276aaf52b5b40154a0e.hot-update.js","sources":["webpack:///./src/Components/DashboardHeader.js"],"sourcesContent":["import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { getDashboardAllDataQuery, getUserDataQuery } from '../queries/queries';\nimport LoadingSpinner from './LoadingSpinner';\nimport { Statistic, Header, Divider } from 'semantic-ui-react';\n\nexport default function DashboardHeader(props) {\n  const { loading: carLoading, error: carError, data: carData } = useQuery(\n    getDashboardAllDataQuery,\n    {\n      variables: {\n        vehicleId: props.vehicleIdState.value,\n      },\n    }\n  );\n  const { error: userError, data: userData } = useQuery(getUserDataQuery);\n\n  if (carLoading) {\n    return <LoadingSpinner />;\n  } else if ((carError, userError)) {\n    return <p>Error! {(carError, userError)}</p>;\n  } else {\n    return (\n      <div className=\"hero-img\">\n        <div className=\"hero-img-car-data\">\n          <h3 style={{ color: '#fff' }}>\n            <Header as=\"h1\">Welcome back {userData.userData.firstName}!</Header>\n            {carData.car.make} {carData.car.model}'s Lifetime Statistics from\n            GOFAR\n          </h3>\n          <Divider hidden />\n          <Statistic.Group size=\"mini\">\n            <Statistic>\n              <Statistic.Value>{carData.car.trips.length}</Statistic.Value>\n              <Statistic.Label> Total trips </Statistic.Label>\n            </Statistic>\n            <Statistic>\n              <Statistic.Value>\n                {carData.car.travelDistanceTotal} KM\n              </Statistic.Value>\n              <Statistic.Label>Total Distance</Statistic.Label>\n            </Statistic>\n            <Statistic>\n              <Statistic.Value>{carData.car.timeInCar} </Statistic.Value>\n              <Statistic.Label>Time in Car (hrs) </Statistic.Label>\n            </Statistic>\n            <Statistic>\n              <Statistic.Value>\n                {Math.floor(carData.car.odometer)} KM\n              </Statistic.Value>\n              <Statistic.Label>Current Odometer</Statistic.Label>\n            </Statistic>\n          </Statistic.Group>\n        </div>\n      </div>\n    );\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AADA;AADA;AAMA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;;;;A","sourceRoot":""}