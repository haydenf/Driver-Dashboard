{"version":3,"file":"static/webpack/static/development/pages/dashboard.js.57fa49f55c4387385ccb.hot-update.js","sources":["webpack:///./pages/dashboard.js"],"sourcesContent":["import DashboardView from '../src/pages/Dashboard/DashboardView';\nimport React, {useState} from 'react';\nimport Cookies from 'js-cookie';\nimport Cookiez from 'next-cookies';\nimport fetch from 'node-fetch';\nimport { Redirect } from 'react-router-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport { createHttpLink } from 'apollo-link-http';\n\nconst link = createHttpLink({ uri: '/graphql', fetch: fetch });\n\nexport default function DashboardPage(props) {\n  const [auth, setAuthrization] = useState(null)\n  const [user, setUserID] = useState(null)\n  // TODO if not logged in redirect to login\n\n  const client = new ApolloClient({\n    uri:\n      'https://jt63wdhqqre6rpjo5lnylfhjqm.appsync-api.ap-southeast-2.amazonaws.com/graphql',\n    headers: {\n      Authorization: auth,\n      UserID: user,\n      'X-API-KEY': 'da2-d5trhzrnqraznclr2teue2bmmu',\n    },\n    fetch,\n  });\n\n  return (\n    <ApolloProvider client={client}>\n      <DashboardView />\n    </ApolloProvider>\n  );\n}\n\nDashboardPage.getInitialProps = ctx => {\n  \n  return {\n    cookiez: Cookiez(ctx) || '',\n  };\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AARA;AAWA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AADA;AAGA;;;;A","sourceRoot":""}