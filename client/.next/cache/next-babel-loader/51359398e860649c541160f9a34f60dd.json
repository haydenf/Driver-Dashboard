{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/home/phillip/Desktop/work/Driver-Dashboard/client/pages/_app.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport cookies from 'next-cookies';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport PrivateRoute from '../src/Components/PrivateRoute';\nimport DashboardSidebar from '../src/Components/DashboardSidebar';\nimport { LoginPage } from '../src/Pages/Login/LoginPage';\n\nfunction App() {\n  const {\n    0: loginDetails,\n    1: setLoginDetails\n  } = useState({}); // const [localUserId] = useState(cookies().GofarDashboardUserId || '');\n  // const [localToken] = useState(cookies().GofarDashboardToken || '');\n\n  return __jsx(React.Fragment, null, __jsx(BrowserRouter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, __jsx(PrivateRoute, {\n    component: DashboardSidebar,\n    userId: localUserId,\n    authToken: localToken,\n    exact: true,\n    path: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), __jsx(Route, {\n    render: props => __jsx(LoginPage, _extends({}, props, {\n      handleLoggedIn: loginResult => {\n        // TODO - you have auth token and user ID now.\n        setLoginDetails(loginResult);\n        document.cookie = \"GofarDashboardToken=\".concat(loginResult.authToken);\n        document.cookie = \"GofarDashboardUserId=\".concat(loginResult.userId);\n      },\n      authToken: loginDetails.authToken,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    })),\n    exact: true,\n    path: \"/login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/phillip/Desktop/work/Driver-Dashboard/client/pages/_app.js"],"names":["React","useState","cookies","BrowserRouter","Route","PrivateRoute","DashboardSidebar","LoginPage","App","loginDetails","setLoginDetails","localUserId","localToken","props","loginResult","document","cookie","authToken","userId"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,SAASC,aAAT,EAAwBC,KAAxB,QAAqC,kBAArC;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AAEA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,SAASC,SAAT,QAA0B,8BAA1B;;AAEA,SAASC,GAAT,GAAe;AACb,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAkCT,QAAQ,CAAC,EAAD,CAAhD,CADa,CAEb;AACA;;AAEA,SACE,4BACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AACE,IAAA,SAAS,EAAEK,gBADb;AAEE,IAAA,MAAM,EAAEK,WAFV;AAGE,IAAA,SAAS,EAAEC,UAHb;AAIE,IAAA,KAAK,MAJP;AAKE,IAAA,IAAI,EAAC,GALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE,MAAC,KAAD;AACE,IAAA,MAAM,EAAEC,KAAK,IACX,MAAC,SAAD,eACMA,KADN;AAEE,MAAA,cAAc,EAAEC,WAAW,IAAI;AAC7B;AACAJ,QAAAA,eAAe,CAACI,WAAD,CAAf;AACAC,QAAAA,QAAQ,CAACC,MAAT,iCAAyCF,WAAW,CAACG,SAArD;AACAF,QAAAA,QAAQ,CAACC,MAAT,kCAA0CF,WAAW,CAACI,MAAtD;AACD,OAPH;AAQE,MAAA,SAAS,EAAET,YAAY,CAACQ,SAR1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFJ;AAaE,IAAA,KAAK,MAbP;AAcE,IAAA,IAAI,EAAC,QAdP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF,CADF,CADF;AA+BD;;AAED,eAAeT,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport cookies from 'next-cookies';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport PrivateRoute from '../src/Components/PrivateRoute';\n\nimport DashboardSidebar from '../src/Components/DashboardSidebar';\nimport { LoginPage } from '../src/Pages/Login/LoginPage';\n\nfunction App() {\n  const [loginDetails, setLoginDetails] = useState({});\n  // const [localUserId] = useState(cookies().GofarDashboardUserId || '');\n  // const [localToken] = useState(cookies().GofarDashboardToken || '');\n\n  return (\n    <>\n      <BrowserRouter>\n        <div>\n          <PrivateRoute\n            component={DashboardSidebar}\n            userId={localUserId}\n            authToken={localToken}\n            exact\n            path=\"/\"\n          />\n          <Route\n            render={props => (\n              <LoginPage\n                {...props}\n                handleLoggedIn={loginResult => {\n                  // TODO - you have auth token and user ID now.\n                  setLoginDetails(loginResult);\n                  document.cookie = `GofarDashboardToken=${loginResult.authToken}`;\n                  document.cookie = `GofarDashboardUserId=${loginResult.userId}`;\n                }}\n                authToken={loginDetails.authToken}\n              />\n            )}\n            exact\n            path=\"/login\"\n          />\n        </div>\n      </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}