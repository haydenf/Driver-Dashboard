{"ast":null,"code":"var _jsxFileName = \"/home/phillip/Desktop/work/Driver-Dashboard/client/pages/login.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport fetch from 'node-fetch';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport { Redirect } from 'react-router-dom';\nimport LoginView from '../src/pages/Login/LoginView';\nimport { useRouter } from 'next/router';\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"../src/styles/App.css\";\n\nfunction handleSuccessfulLogin(router) {\n  return function (loginResult) {\n    document.cookies.set(ctx, 'GofarDashboardUserId', loginResult.userId, {\n      maxAge: 30 * 24 * 60 * 60,\n      path: '/'\n    });\n    document.cookies.set(ctx, 'GofarDashboardToken', loginResult.userToken, {\n      maxAge: 30 * 24 * 60 * 60,\n      path: '/'\n    });\n    router.push('/dashboard');\n  };\n}\n\nexport default function LoginPage(props) {\n  if (props.authToken) {\n    return __jsx(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    });\n  }\n\n  const router = useRouter();\n  const client = new ApolloClient({\n    uri: 'https://jt63wdhqqre6rpjo5lnylfhjqm.appsync-api.ap-southeast-2.amazonaws.com/graphql',\n    headers: {\n      Authorization: props.authToken,\n      'X-API-KEY': 'da2-d5trhzrnqraznclr2teue2bmmu'\n    },\n    fetch\n  });\n  return __jsx(ApolloProvider, {\n    client: client,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, __jsx(LoginView, _extends({}, props, {\n    handleSuccessfulLogin: handleSuccessfulLogin(router),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })));\n}\n\nLoginPage.getInitialProps = ctx => {\n  console.log(ctx.req.cookie);\n  return {\n    cookies: ctx.req.cookie\n  };\n};","map":{"version":3,"sources":["/home/phillip/Desktop/work/Driver-Dashboard/client/pages/login.js"],"names":["React","fetch","ApolloClient","ApolloProvider","Redirect","LoginView","useRouter","handleSuccessfulLogin","router","loginResult","document","cookies","set","ctx","userId","maxAge","path","userToken","push","LoginPage","props","authToken","client","uri","headers","Authorization","getInitialProps","console","log","req","cookie"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,OAAO,kCAAP;AACA,OAAO,uBAAP;;AAGA,SAASC,qBAAT,CAA+BC,MAA/B,EAAuC;AACrC,SAAO,UAAUC,WAAV,EAAuB;AAC5BC,IAAAA,QAAQ,CAACC,OAAT,CAAiBC,GAAjB,CAAqBC,GAArB,EAAyB,sBAAzB,EAAgDJ,WAAW,CAACK,MAA5D,EAAmE;AAC/DC,MAAAA,MAAM,EAAE,KAAK,EAAL,GAAU,EAAV,GAAe,EADwC;AAE/DC,MAAAA,IAAI,EAAE;AAFyD,KAAnE;AAIAN,IAAAA,QAAQ,CAACC,OAAT,CAAiBC,GAAjB,CAAqBC,GAArB,EAAyB,qBAAzB,EAA+CJ,WAAW,CAACQ,SAA3D,EAAqE;AACjEF,MAAAA,MAAM,EAAE,KAAK,EAAL,GAAU,EAAV,GAAe,EAD0C;AAEjEC,MAAAA,IAAI,EAAE;AAF2D,KAArE;AAIAR,IAAAA,MAAM,CAACU,IAAP,CAAY,YAAZ;AACD,GAVD;AAWD;;AAED,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACvC,MAAIA,KAAK,CAACC,SAAV,EAAqB;AACnB,WAAO,MAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,QAAMb,MAAM,GAAGF,SAAS,EAAxB;AAEA,QAAMgB,MAAM,GAAG,IAAIpB,YAAJ,CAAiB;AAC9BqB,IAAAA,GAAG,EACD,qFAF4B;AAG9BC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAEL,KAAK,CAACC,SADd;AAEP,mBAAa;AAFN,KAHqB;AAO9BpB,IAAAA;AAP8B,GAAjB,CAAf;AAUA,SACE,MAAC,cAAD;AAAgB,IAAA,MAAM,EAAEqB,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD,eAAeF,KAAf;AAAsB,IAAA,qBAAqB,EAAEb,qBAAqB,CAACC,MAAD,CAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF;AAKD;;AAEDW,SAAS,CAACO,eAAV,GAA6Bb,GAAD,IAAS;AACnCc,EAAAA,OAAO,CAACC,GAAR,CAAYf,GAAG,CAACgB,GAAJ,CAAQC,MAApB;AACA,SAAO;AACLnB,IAAAA,OAAO,EAAEE,GAAG,CAACgB,GAAJ,CAAQC;AADZ,GAAP;AAGD,CALD","sourcesContent":["import React from 'react';\nimport fetch from 'node-fetch';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport { Redirect } from 'react-router-dom';\nimport LoginView from '../src/pages/Login/LoginView';\nimport { useRouter } from 'next/router'\n\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"../src/styles/App.css\";\n\n\nfunction handleSuccessfulLogin(router) {\n  return function (loginResult) {\n    document.cookies.set(ctx,'GofarDashboardUserId',loginResult.userId,{\n        maxAge: 30 * 24 * 60 * 60,\n        path: '/',\n      });\n    document.cookies.set(ctx,'GofarDashboardToken',loginResult.userToken,{\n        maxAge: 30 * 24 * 60 * 60,\n        path: '/',\n    });\n    router.push('/dashboard');\n  }\n}\n\nexport default function LoginPage(props) {\n  if (props.authToken) {\n    return <Redirect to=\"/\" />;\n  }\n\n  const router = useRouter();\n\n  const client = new ApolloClient({\n    uri:\n      'https://jt63wdhqqre6rpjo5lnylfhjqm.appsync-api.ap-southeast-2.amazonaws.com/graphql',\n    headers: {\n      Authorization: props.authToken,\n      'X-API-KEY': 'da2-d5trhzrnqraznclr2teue2bmmu',\n    },\n    fetch\n  });\n\n  return (\n    <ApolloProvider client={client}>\n      <LoginView {...props} handleSuccessfulLogin={handleSuccessfulLogin(router)} />\n    </ApolloProvider>\n  );\n}\n\nLoginPage.getInitialProps = (ctx) => {\n  console.log(ctx.req.cookie);\n  return {\n    cookies: ctx.req.cookie\n  }\n}"]},"metadata":{},"sourceType":"module"}