{"ast":null,"code":"var _jsxFileName = \"/Users/haydenfuller/Documents/Hayden/Own Projects/gofar/Driver-Dashboard/client/src/Components/Card/LastFillUpCard.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Card, Icon } from 'semantic-ui-react';\nimport reverse from 'reverse-geocode';\n\nclass LastFillUpCard extends React.Component {\n  render(props) {\n    if (this.props.lastFillUpData[0] === undefined || this.props.lastFillUpData[0] === null) {\n      return __jsx(Card, {\n        className: \"data-cards-r1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, __jsx(Card.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, __jsx(Icon, {\n        float: \"left\",\n        circular: true,\n        inverted: true,\n        color: \"teal\",\n        name: \"battery high\",\n        size: \"big\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        className: \"data-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, __jsx(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \" You have no data \")), __jsx(Card.Content, {\n        extra: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, __jsx(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }))));\n    } else {\n      this.lat = this.props.lastFillUpData[0].location.lat;\n      this.lng = this.props.lastFillUpData[0].location.lng;\n      this.time = new Date(this.props.lastFillUpData[0].timestamp);\n      this.reverseGeo = reverse.lookup(this.lat, this.lng, 'au');\n      return __jsx(Card, {\n        className: \"data-cards-r1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, __jsx(Card.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, __jsx(Icon, {\n        float: \"left\",\n        circular: true,\n        inverted: true,\n        color: \"teal\",\n        name: \"battery high\",\n        size: \"big\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), __jsx(\"div\", {\n        className: \"data-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Litres input last fillup \"), __jsx(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, this.props.lastFillUpData[0].litres, \" L\")), __jsx(Card.Content, {\n        extra: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, __jsx(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), __jsx(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Last refill\"), __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Time: \", this.time.toDateString()), __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Location: \", this.reverseGeo.city))));\n    }\n  }\n\n}\n\nexport default LastFillUpCard;","map":{"version":3,"sources":["/Users/haydenfuller/Documents/Hayden/Own Projects/gofar/Driver-Dashboard/client/src/Components/Card/LastFillUpCard.js"],"names":["React","Card","Icon","reverse","LastFillUpCard","Component","render","props","lastFillUpData","undefined","lat","location","lng","time","Date","timestamp","reverseGeo","lookup","litres","toDateString","city"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Card, Icon } from 'semantic-ui-react';\nimport reverse from 'reverse-geocode';\n\nclass LastFillUpCard extends React.Component {\n  render(props) {\n    if (\n      this.props.lastFillUpData[0] === undefined ||\n      this.props.lastFillUpData[0] === null\n    ) {\n      return (\n        <Card className=\"data-cards-r1\">\n          <Card.Content>\n            <Icon\n              float=\"left\"\n              circular\n              inverted\n              color=\"teal\"\n              name=\"battery high\"\n              size=\"big\"\n            />\n            <div className=\"data-content\">\n              <h2> You have no data </h2>\n            </div>\n            <Card.Content extra>\n              <hr></hr>\n            </Card.Content>\n          </Card.Content>\n        </Card>\n      );\n    } else {\n      this.lat = this.props.lastFillUpData[0].location.lat;\n      this.lng = this.props.lastFillUpData[0].location.lng;\n      this.time = new Date(this.props.lastFillUpData[0].timestamp);\n      this.reverseGeo = reverse.lookup(this.lat, this.lng, 'au');\n\n      return (\n        <Card className=\"data-cards-r1\">\n          <Card.Content>\n            <Icon\n              float=\"left\"\n              circular\n              inverted\n              color=\"teal\"\n              name=\"battery high\"\n              size=\"big\"\n            />\n            <div className=\"data-content\">\n              <p>Litres input last fillup </p>\n              <h2>{this.props.lastFillUpData[0].litres} L</h2>\n            </div>\n            <Card.Content extra>\n              <hr></hr>\n              <h4>Last refill</h4>\n              <p>Time: {this.time.toDateString()}</p>\n              <p>Location: {this.reverseGeo.city}</p>\n            </Card.Content>\n          </Card.Content>\n        </Card>\n      );\n    }\n  }\n}\n\nexport default LastFillUpCard;\n"]},"metadata":{},"sourceType":"module"}