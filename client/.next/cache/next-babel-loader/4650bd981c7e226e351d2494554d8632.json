{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n  query getDataForCar($vehicleId: ID!) {\\n    car(id: $vehicleId) {\\n      displayName\\n      odometer\\n      make\\n      model\\n      refillData {\\n        litres\\n        totalCost\\n        odometerKms\\n        timestamp\\n        location {\\n          lat\\n          lng\\n        }\\n      }\\n      odometerAtRefill\\n      lastFillUp\\n      lastFillUpTime\\n      lastLocation {\\n        lat\\n        lng\\n      }\\n      fuelLeft\\n      travelSince\\n      diagnosticIssue {\\n        code\\n        isActive\\n      }\\n      diagnosticDetail\\n      businessRatio\\n      businessTotal\\n      averageSpeed\\n      travelDistanceTotal\\n      travelDistanceThisYear\\n      timeInCar\\n      emissions\\n      fuelEconomy\\n      lifeLitresPerHundredKm {\\n        litresPerHundredKm\\n      }\\n      parking {\\n        lat\\n        lng\\n      }\\n      timeTraveled\\n      recentTrip {\\n        id\\n        score\\n        litres\\n        litresPerHundredKm\\n        distance\\n        averageSpeed\\n        durationInSeconds\\n        startTime\\n        endTime\\n        tags {\\n          name\\n          id\\n          tagType\\n        }\\n      }\\n      trips {\\n        litres\\n        litresPerHundredKm\\n        distance\\n        averageSpeed\\n        durationInSeconds\\n        startTime\\n        endTime\\n        tags {\\n          name\\n          id\\n          tagType\\n        }\\n        startLocation {\\n          geoPoint {\\n            lat\\n            lng\\n          }\\n        }\\n        endLocation {\\n          geoPoint {\\n            lat\\n            lng\\n          }\\n        }\\n      }\\n      parkedVehicle {\\n        name\\n        location {\\n          lat\\n          lng\\n        }\\n        timestamp\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject4 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n  {\\n    userData {\\n      id\\n      firstName\\n      cars {\\n        displayName\\n        model\\n        make\\n        id\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  {\\n    cars {\\n      carName\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  query Login($email: String!, $password: String!) {\\n    login(email: $email, password: $password) {\\n      userId\\n      authToken\\n      successful\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql } from 'apollo-boost';\nconst LOGIN_QUERY = gql(_templateObject());\nconst getCarsQuery = gql(_templateObject2());\nconst getUserDataQuery = gql(_templateObject3());\nconst getDashboardAllDataQuery = gql(_templateObject4());\nexport { getCarsQuery, getUserDataQuery, getDashboardAllDataQuery, LOGIN_QUERY };","map":{"version":3,"sources":["/Users/haydenfuller/Documents/Hayden/Own Projects/gofar/Driver-Dashboard/client/src/queries/queries.js"],"names":["gql","LOGIN_QUERY","getCarsQuery","getUserDataQuery","getDashboardAllDataQuery"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,GAAT,QAAoB,cAApB;AAEA,MAAMC,WAAW,GAAGD,GAAH,mBAAjB;AAUA,MAAME,YAAY,GAAGF,GAAH,oBAAlB;AASA,MAAMG,gBAAgB,GAAGH,GAAH,oBAAtB;AAeA,MAAMI,wBAAwB,GAAGJ,GAAH,oBAA9B;AAqGA,SACEE,YADF,EAEEC,gBAFF,EAGEC,wBAHF,EAIEH,WAJF","sourcesContent":["import { gql } from 'apollo-boost';\n\nconst LOGIN_QUERY = gql`\n  query Login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      userId\n      authToken\n      successful\n    }\n  }\n`;\n\nconst getCarsQuery = gql`\n  {\n    cars {\n      carName\n      id\n    }\n  }\n`;\n\nconst getUserDataQuery = gql`\n  {\n    userData {\n      id\n      firstName\n      cars {\n        displayName\n        model\n        make\n        id\n      }\n    }\n  }\n`;\n\nconst getDashboardAllDataQuery = gql`\n  query getDataForCar($vehicleId: ID!) {\n    car(id: $vehicleId) {\n      displayName\n      odometer\n      make\n      model\n      refillData {\n        litres\n        totalCost\n        odometerKms\n        timestamp\n        location {\n          lat\n          lng\n        }\n      }\n      odometerAtRefill\n      lastFillUp\n      lastFillUpTime\n      lastLocation {\n        lat\n        lng\n      }\n      fuelLeft\n      travelSince\n      diagnosticIssue {\n        code\n        isActive\n      }\n      diagnosticDetail\n      businessRatio\n      businessTotal\n      averageSpeed\n      travelDistanceTotal\n      travelDistanceThisYear\n      timeInCar\n      emissions\n      fuelEconomy\n      lifeLitresPerHundredKm {\n        litresPerHundredKm\n      }\n      parking {\n        lat\n        lng\n      }\n      timeTraveled\n      recentTrip {\n        id\n        score\n        litres\n        litresPerHundredKm\n        distance\n        averageSpeed\n        durationInSeconds\n        startTime\n        endTime\n        tags {\n          name\n          id\n          tagType\n        }\n      }\n      trips {\n        litres\n        litresPerHundredKm\n        distance\n        averageSpeed\n        durationInSeconds\n        startTime\n        endTime\n        tags {\n          name\n          id\n          tagType\n        }\n        startLocation {\n          geoPoint {\n            lat\n            lng\n          }\n        }\n        endLocation {\n          geoPoint {\n            lat\n            lng\n          }\n        }\n      }\n      parkedVehicle {\n        name\n        location {\n          lat\n          lng\n        }\n        timestamp\n      }\n    }\n  }\n`;\n\nexport {\n  getCarsQuery,\n  getUserDataQuery,\n  getDashboardAllDataQuery,\n  LOGIN_QUERY,\n};\n"]},"metadata":{},"sourceType":"module"}