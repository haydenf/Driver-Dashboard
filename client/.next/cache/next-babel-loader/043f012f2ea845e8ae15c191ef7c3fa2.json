{"ast":null,"code":"var _jsxFileName = \"/home/phillip/Desktop/work/Driver-Dashboard/client/src/Components/DashboardHeader.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { getDashboardAllDataQuery, getUserDataQuery } from '../queries/queries';\nimport LoadingSpinner from './LoadingSpinner';\nimport { Statistic, Header, Divider } from 'semantic-ui-react';\nexport default function DashboardHeader(props) {\n  const {\n    loading: carLoading,\n    error: carError,\n    data: carData\n  } = useQuery(getDashboardAllDataQuery, {\n    variables: {\n      vehicleId: props.vehicleIdState.value\n    }\n  });\n  const {\n    error: userError,\n    data: userData\n  } = useQuery(getUserDataQuery);\n\n  if (carLoading) {\n    return __jsx(LoadingSpinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    });\n  } else if (carError, userError) {\n    return __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"Error! \", (carError, userError));\n  } else {\n    return __jsx(\"div\", {\n      className: \"hero-img\",\n      style: {\n        height: \"350px\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, __jsx(\"h1\", {\n      style: {\n        color: '#fff'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Welcome back \", userData.userData.firstName, \"!\"), __jsx(\"div\", {\n      className: \"hero-img-car-data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, __jsx(\"h3\", {\n      style: {\n        color: '#fff'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, carData.car.make, \" \", carData.car.model, \"'s Lifetime Statistics from GOFAR\"), __jsx(Divider, {\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), __jsx(Statistic.Group, {\n      size: \"mini\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, __jsx(Statistic, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, __jsx(Statistic.Value, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, carData.car.trips.length), __jsx(Statistic.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \" Total trips \")), __jsx(Statistic, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, __jsx(Statistic.Value, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, carData.car.travelDistanceTotal, \" KM\"), __jsx(Statistic.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Total Distance\")), __jsx(Statistic, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, __jsx(Statistic.Value, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, carData.car.timeInCar, \" \"), __jsx(Statistic.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Time in Car (hrs) \")), __jsx(Statistic, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, __jsx(Statistic.Value, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, Math.floor(carData.car.odometer), \" KM\"), __jsx(Statistic.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Current Odometer\")))));\n  }\n}","map":{"version":3,"sources":["/home/phillip/Desktop/work/Driver-Dashboard/client/src/Components/DashboardHeader.js"],"names":["React","useQuery","getDashboardAllDataQuery","getUserDataQuery","LoadingSpinner","Statistic","Header","Divider","DashboardHeader","props","loading","carLoading","error","carError","data","carData","variables","vehicleId","vehicleIdState","value","userError","userData","height","color","firstName","car","make","model","trips","length","travelDistanceTotal","timeInCar","Math","floor","odometer"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { getDashboardAllDataQuery, getUserDataQuery } from '../queries/queries';\nimport LoadingSpinner from './LoadingSpinner';\nimport { Statistic, Header, Divider } from 'semantic-ui-react';\n\nexport default function DashboardHeader(props) {\n  const { loading: carLoading, error: carError, data: carData } = useQuery(\n    getDashboardAllDataQuery,\n    {\n      variables: {\n        vehicleId: props.vehicleIdState.value,\n      },\n    }\n  );\n  const { error: userError, data: userData } = useQuery(getUserDataQuery);\n\n  if (carLoading) {\n    return <LoadingSpinner />;\n  } else if ((carError, userError)) {\n    return <p>Error! {(carError, userError)}</p>;\n  } else {\n    return (\n      <div className=\"hero-img\" style={{ height:\"350px\" }} >\n        <h1 style={{ color: '#fff' }}>Welcome back {userData.userData.firstName}!</h1>\n        <div className=\"hero-img-car-data\">\n          <h3 style={{ color: '#fff' }}>\n            {carData.car.make} {carData.car.model}'s Lifetime Statistics from\n            GOFAR\n          </h3>\n          <Divider hidden />\n          <Statistic.Group size=\"mini\">\n            <Statistic>\n              <Statistic.Value>{carData.car.trips.length}</Statistic.Value>\n              <Statistic.Label> Total trips </Statistic.Label>\n            </Statistic>\n            <Statistic>\n              <Statistic.Value>\n                {carData.car.travelDistanceTotal} KM\n              </Statistic.Value>\n              <Statistic.Label>Total Distance</Statistic.Label>\n            </Statistic>\n            <Statistic>\n              <Statistic.Value>{carData.car.timeInCar} </Statistic.Value>\n              <Statistic.Label>Time in Car (hrs) </Statistic.Label>\n            </Statistic>\n            <Statistic>\n              <Statistic.Value>\n                {Math.floor(carData.car.odometer)} KM\n              </Statistic.Value>\n              <Statistic.Label>Current Odometer</Statistic.Label>\n            </Statistic>\n          </Statistic.Group>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}