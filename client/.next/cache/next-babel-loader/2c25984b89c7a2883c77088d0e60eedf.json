{"ast":null,"code":"var _jsxFileName = \"/Users/haydenfuller/Documents/Hayden/Own Projects/gofar/Driver-Dashboard/client/src/Components/AntdTable/AntdTableComponent.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport { Table, Button, Tag } from 'antd';\nimport { Segment } from 'semantic-ui-react';\nconst data = [{\n  key: '1',\n  time: '2019-01-17T08:00:00Z',\n  distance: 20,\n  tags: ['vacation'],\n  startlocation: 'Sydney',\n  endlocation: 'Melbourne'\n}, {\n  key: '2',\n  time: '2019-04-17T09:52:00Z',\n  distance: 22,\n  tags: [],\n  startlocation: 'Melbourne',\n  endlocation: 'Sydney'\n}, {\n  key: '3',\n  time: '2019-05-17T12:32:00Z',\n  distance: 23,\n  tags: ['busuiness'],\n  startlocation: 'Brisbane',\n  endlocation: 'Gold Coast'\n}, {\n  key: '4',\n  time: '2019-07-17T11:00:00Z',\n  distance: 40,\n  tags: [],\n  startlocation: 'Gold Coast',\n  endlocation: 'Brisbane'\n}, {\n  key: '5',\n  time: '2019-07-21T11:33:00Z',\n  distance: 33,\n  tags: ['busuiness'],\n  startlocation: 'lennox head',\n  endlocation: 'Margaret River'\n}, {\n  key: '6',\n  time: '2019-08-01T19:41:00Z',\n  distance: 21,\n  tags: ['commute'],\n  startlocation: 'Perth',\n  endlocation: 'Adelaide'\n}, {\n  key: '7',\n  time: '2019-08-15T15:21:00Z',\n  distance: 19,\n  tags: ['commute'],\n  startlocation: 'Adelaide',\n  endlocation: 'Brisbane'\n}]; // const columns = [\n//   {\n//     title: \"Time\",\n//     dataIndex: \"time\"\n//   },\n//   {\n//     title: \"Distance\",\n//     dataIndex: \"ditance\"\n//   },\n//   {\n//     title: \"Tags\",\n//     dataIndex: \"tags\"\n//   },\n//   {\n//     title: \"Start Loocation\",\n//     dataIndex: \"startlocation\"\n//   },\n//   {\n//     title: \"End Location\",\n//     dataIndex: \"endlocation\"\n//   }\n// ];\n\nclass AntdTableComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleChange\", (pagination, filters, sorter) => {\n      console.log('Various parameters', pagination, filters, sorter);\n      this.setState({\n        filteredInfo: filters,\n        sortedInfo: sorter\n      });\n    });\n\n    _defineProperty(this, \"clearFilters\", () => {\n      this.setState({\n        filteredInfo: null\n      });\n    });\n\n    _defineProperty(this, \"clearAll\", () => {\n      this.setState({\n        filteredInfo: null,\n        sortedInfo: null\n      });\n    });\n\n    _defineProperty(this, \"setTimeSort\", () => {\n      this.setState({\n        sortedInfo: {\n          order: 'descend',\n          columnKey: 'time'\n        }\n      });\n    });\n\n    _defineProperty(this, \"setDistanceSort\", () => {\n      this.setState({\n        sortedInfo: {\n          order: 'descend',\n          columnKey: 'time'\n        }\n      });\n    });\n\n    this.state = {\n      filteredInfo: null,\n      sortedInfo: null\n    };\n  }\n\n  render({\n    tripData\n  }) {\n    {\n      console.log(tripData);\n    }\n    let {\n      sortedInfo,\n      filteredInfo\n    } = this.state;\n    sortedInfo = sortedInfo || {};\n    filteredInfo = filteredInfo || {};\n    const columns = [{\n      title: 'Time',\n      dataIndex: 'time',\n      key: 'time',\n      sorter: (a, b) => a.date < b.date ? -1 : a.date > b.date ? 1 : 0,\n      sortOrder: sortedInfo.columnKey === 'time' && sortedInfo.order\n    }, {\n      title: 'Distance',\n      dataIndex: 'distance',\n      key: 'distance',\n      sorter: (a, b) => a.distance - b.distance,\n      sortOrder: sortedInfo.columnKey === 'distance' && sortedInfo.order\n    }, {\n      title: 'Tags',\n      dataIndex: 'tags',\n      render: tags => __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, tags.map(tag => {\n        let color = 'green';\n\n        if (tag === 'vacation') {\n          color = 'red';\n        } else if (tag === 'busuiness') {\n          color = 'blue';\n        }\n\n        return __jsx(Tag, {\n          color: color,\n          key: tag,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172\n          },\n          __self: this\n        }, tag.toUpperCase());\n      })),\n      key: 'tags',\n      filters: [{\n        text: 'busuiness',\n        value: 'busuiness'\n      }, {\n        text: 'vacation',\n        value: 'vacation'\n      }],\n      filteredValue: filteredInfo.tags || null,\n      onFilter: (value, record) => record.tags.includes(value)\n    }, {\n      title: 'Start Location',\n      dataIndex: 'startlocation',\n      key: 'startlocation',\n      filters: [{\n        text: 'Sydney',\n        value: 'Sydney'\n      }, {\n        text: 'Brisbane',\n        value: 'Brisbane'\n      }],\n      filteredValue: filteredInfo.startlocation || null,\n      onFilter: (value, record) => record.startlocation.includes(value)\n    }, {\n      title: 'End Location',\n      dataIndex: 'endlocation',\n      key: 'endlocation',\n      filters: [{\n        text: 'Sydney',\n        value: 'Sydney'\n      }, {\n        text: 'Brisbane',\n        value: 'Brisbane'\n      }],\n      filteredValue: filteredInfo.endlocation || null,\n      onFilter: (value, record) => record.endlocation.includes(value)\n    }];\n    return __jsx(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"table-operations\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, __jsx(Button, {\n      onClick: this.setTimeSort,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, \"Sort time\"), __jsx(Button, {\n      onClick: this.setDistanceSort,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, \"Sort Distance\"), __jsx(Button, {\n      onClick: this.clearFilters,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, \"Clear filters\"), __jsx(Button, {\n      onClick: this.clearAll,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, \"Clear filters and sorters\")), __jsx(Table, {\n      columns: columns,\n      dataSource: data,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default AntdTableComponent;","map":{"version":3,"sources":["/Users/haydenfuller/Documents/Hayden/Own Projects/gofar/Driver-Dashboard/client/src/Components/AntdTable/AntdTableComponent.js"],"names":["React","Table","Button","Tag","Segment","data","key","time","distance","tags","startlocation","endlocation","AntdTableComponent","Component","constructor","props","pagination","filters","sorter","console","log","setState","filteredInfo","sortedInfo","order","columnKey","state","render","tripData","columns","title","dataIndex","a","b","date","sortOrder","map","tag","color","toUpperCase","text","value","filteredValue","onFilter","record","includes","setTimeSort","setDistanceSort","clearFilters","clearAll","handleChange"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { Table, Button, Tag } from 'antd';\n\nimport { Segment } from 'semantic-ui-react';\n\nconst data = [\n  {\n    key: '1',\n    time: '2019-01-17T08:00:00Z',\n    distance: 20,\n    tags: ['vacation'],\n    startlocation: 'Sydney',\n    endlocation: 'Melbourne',\n  },\n  {\n    key: '2',\n    time: '2019-04-17T09:52:00Z',\n    distance: 22,\n    tags: [],\n    startlocation: 'Melbourne',\n    endlocation: 'Sydney',\n  },\n  {\n    key: '3',\n    time: '2019-05-17T12:32:00Z',\n    distance: 23,\n    tags: ['busuiness'],\n    startlocation: 'Brisbane',\n    endlocation: 'Gold Coast',\n  },\n  {\n    key: '4',\n    time: '2019-07-17T11:00:00Z',\n    distance: 40,\n    tags: [],\n    startlocation: 'Gold Coast',\n    endlocation: 'Brisbane',\n  },\n\n  {\n    key: '5',\n    time: '2019-07-21T11:33:00Z',\n    distance: 33,\n    tags: ['busuiness'],\n    startlocation: 'lennox head',\n    endlocation: 'Margaret River',\n  },\n  {\n    key: '6',\n    time: '2019-08-01T19:41:00Z',\n    distance: 21,\n    tags: ['commute'],\n    startlocation: 'Perth',\n    endlocation: 'Adelaide',\n  },\n  {\n    key: '7',\n    time: '2019-08-15T15:21:00Z',\n    distance: 19,\n    tags: ['commute'],\n    startlocation: 'Adelaide',\n    endlocation: 'Brisbane',\n  },\n];\n\n// const columns = [\n//   {\n//     title: \"Time\",\n//     dataIndex: \"time\"\n//   },\n\n//   {\n//     title: \"Distance\",\n//     dataIndex: \"ditance\"\n//   },\n\n//   {\n//     title: \"Tags\",\n//     dataIndex: \"tags\"\n//   },\n\n//   {\n//     title: \"Start Loocation\",\n//     dataIndex: \"startlocation\"\n//   },\n//   {\n//     title: \"End Location\",\n//     dataIndex: \"endlocation\"\n//   }\n// ];\n\nclass AntdTableComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filteredInfo: null,\n      sortedInfo: null,\n    };\n  }\n\n  handleChange = (pagination, filters, sorter) => {\n    console.log('Various parameters', pagination, filters, sorter);\n    this.setState({\n      filteredInfo: filters,\n      sortedInfo: sorter,\n    });\n  };\n  clearFilters = () => {\n    this.setState({ filteredInfo: null });\n  };\n  clearAll = () => {\n    this.setState({\n      filteredInfo: null,\n      sortedInfo: null,\n    });\n  };\n  setTimeSort = () => {\n    this.setState({\n      sortedInfo: {\n        order: 'descend',\n        columnKey: 'time',\n      },\n    });\n  };\n  setDistanceSort = () => {\n    this.setState({\n      sortedInfo: {\n        order: 'descend',\n        columnKey: 'time',\n      },\n    });\n  };\n\n  render({ tripData }) {\n    {\n      console.log(tripData);\n    }\n    let { sortedInfo, filteredInfo } = this.state;\n    sortedInfo = sortedInfo || {};\n    filteredInfo = filteredInfo || {};\n    const columns = [\n      {\n        title: 'Time',\n        dataIndex: 'time',\n        key: 'time',\n        sorter: (a, b) => (a.date < b.date ? -1 : a.date > b.date ? 1 : 0),\n        sortOrder: sortedInfo.columnKey === 'time' && sortedInfo.order,\n      },\n\n      {\n        title: 'Distance',\n        dataIndex: 'distance',\n        key: 'distance',\n        sorter: (a, b) => a.distance - b.distance,\n        sortOrder: sortedInfo.columnKey === 'distance' && sortedInfo.order,\n      },\n\n      {\n        title: 'Tags',\n        dataIndex: 'tags',\n        render: tags => (\n          <span>\n            {tags.map(tag => {\n              let color = 'green';\n              if (tag === 'vacation') {\n                color = 'red';\n              } else if (tag === 'busuiness') {\n                color = 'blue';\n              }\n              return (\n                <Tag color={color} key={tag}>\n                  {tag.toUpperCase()}\n                </Tag>\n              );\n            })}\n          </span>\n        ),\n        key: 'tags',\n        filters: [\n          { text: 'busuiness', value: 'busuiness' },\n          { text: 'vacation', value: 'vacation' },\n        ],\n        filteredValue: filteredInfo.tags || null,\n        onFilter: (value, record) => record.tags.includes(value),\n      },\n\n      {\n        title: 'Start Location',\n        dataIndex: 'startlocation',\n        key: 'startlocation',\n        filters: [\n          { text: 'Sydney', value: 'Sydney' },\n          { text: 'Brisbane', value: 'Brisbane' },\n        ],\n        filteredValue: filteredInfo.startlocation || null,\n        onFilter: (value, record) => record.startlocation.includes(value),\n      },\n\n      {\n        title: 'End Location',\n        dataIndex: 'endlocation',\n        key: 'endlocation',\n        filters: [\n          { text: 'Sydney', value: 'Sydney' },\n          { text: 'Brisbane', value: 'Brisbane' },\n        ],\n        filteredValue: filteredInfo.endlocation || null,\n        onFilter: (value, record) => record.endlocation.includes(value),\n      },\n    ];\n    return (\n      <Segment>\n        <div>\n          <div className=\"table-operations\">\n            <Button onClick={this.setTimeSort}>Sort time</Button>\n            <Button onClick={this.setDistanceSort}>Sort Distance</Button>\n            <Button onClick={this.clearFilters}>Clear filters</Button>\n            <Button onClick={this.clearAll}>Clear filters and sorters</Button>\n          </div>\n          <Table\n            columns={columns}\n            dataSource={data}\n            onChange={this.handleChange}\n          />\n        </div>\n      </Segment>\n    );\n  }\n}\n\nexport default AntdTableComponent;\n"]},"metadata":{},"sourceType":"module"}