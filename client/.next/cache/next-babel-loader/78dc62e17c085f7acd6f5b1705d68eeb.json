{"ast":null,"code":"var _jsxFileName = \"/Users/haydenfuller/Documents/Hayden/Own Projects/gofar/Driver-Dashboard/client/src/pages/Login/LoginView.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Container } from 'semantic-ui-react';\nimport LoginForm from '../../Components/Login/LoginForm';\nimport LoginHeroImage from '../../Images/loginHeroImage.jpg';\nimport LoadingSpinner from '../../Components/LoadingSpinner';\nimport { LOGIN_QUERY } from '../../queries/queries';\nimport { useLazyQuery } from '@apollo/react-hooks';\nimport { Route } from 'react-router-dom'; // import 'semantic-ui-css/semantic.min.css';\n// import '../src/styles/App.css';\n\nconst renderBody = executeLogin => {\n  return __jsx(LoginForm, {\n    handleLogin: (email, password) => {\n      executeLogin({\n        variables: {\n          email,\n          password\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  });\n};\n\nconst LoginView = props => {\n  const [executeLogin, {\n    loading,\n    data\n  }] = useLazyQuery(LOGIN_QUERY);\n  const enteredInvalidPassword = data && data.login && !data.login.successful;\n\n  if (!loading && data && data.login && data.login.successful) {\n    props.handleSuccessfulLogin({\n      authToken: data.login.authToken,\n      userId: data.login.userId\n    });\n\n    __jsx(Route, {\n      path: \"/dashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    });\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Container, {\n    className: \"bg-image\",\n    style: {\n      backgroundImage: `url(${LoginHeroImage})`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, enteredInvalidPassword && __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Invalid Password\"), loading && __jsx(LoadingSpinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), renderBody(executeLogin)));\n};\n\nexport default LoginView;","map":{"version":3,"sources":["/Users/haydenfuller/Documents/Hayden/Own Projects/gofar/Driver-Dashboard/client/src/pages/Login/LoginView.js"],"names":["React","Container","LoginForm","LoginHeroImage","LoadingSpinner","LOGIN_QUERY","useLazyQuery","Route","renderBody","executeLogin","email","password","variables","LoginView","props","loading","data","enteredInvalidPassword","login","successful","handleSuccessfulLogin","authToken","userId","backgroundImage"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAOC,SAAP,MAAsB,kCAAtB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,SAASC,KAAT,QAAsB,kBAAtB,C,CAEA;AACA;;AACA,MAAMC,UAAU,GAAGC,YAAY,IAAI;AACjC,SACE,MAAC,SAAD;AACE,IAAA,WAAW,EAAE,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAChCF,MAAAA,YAAY,CAAC;AACXG,QAAAA,SAAS,EAAE;AACTF,UAAAA,KADS;AAETC,UAAAA;AAFS;AADA,OAAD,CAAZ;AAMD,KARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAYD,CAbD;;AAeA,MAAME,SAAS,GAAGC,KAAK,IAAI;AACzB,QAAM,CAACL,YAAD,EAAe;AAAEM,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAf,IAAoCV,YAAY,CAACD,WAAD,CAAtD;AACA,QAAMY,sBAAsB,GAAGD,IAAI,IAAIA,IAAI,CAACE,KAAb,IAAsB,CAACF,IAAI,CAACE,KAAL,CAAWC,UAAjE;;AAEA,MAAI,CAACJ,OAAD,IAAYC,IAAZ,IAAoBA,IAAI,CAACE,KAAzB,IAAkCF,IAAI,CAACE,KAAL,CAAWC,UAAjD,EAA6D;AAC3DL,IAAAA,KAAK,CAACM,qBAAN,CAA4B;AAC1BC,MAAAA,SAAS,EAAEL,IAAI,CAACE,KAAL,CAAWG,SADI;AAE1BC,MAAAA,MAAM,EAAEN,IAAI,CAACE,KAAL,CAAWI;AAFO,KAA5B;;AAIA,UAAC,KAAD;AAAO,MAAA,IAAI,EAAC,YAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD;;AAED,SACE,4BACE,MAAC,SAAD;AACE,IAAA,SAAS,EAAC,UADZ;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAG,OAAMpB,cAAe;AAAzC,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGc,sBAAsB,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAL7B,EAMGF,OAAO,IAAI,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANd,EAOGP,UAAU,CAACC,YAAD,CAPb,CADF,CADF;AAaD,CAzBD;;AA2BA,eAAeI,SAAf","sourcesContent":["import React from 'react';\nimport { Container } from 'semantic-ui-react';\nimport LoginForm from '../../Components/Login/LoginForm';\nimport LoginHeroImage from '../../Images/loginHeroImage.jpg';\nimport LoadingSpinner from '../../Components/LoadingSpinner';\nimport { LOGIN_QUERY } from '../../queries/queries';\nimport { useLazyQuery } from '@apollo/react-hooks';\nimport { Route } from 'react-router-dom';\n\n// import 'semantic-ui-css/semantic.min.css';\n// import '../src/styles/App.css';\nconst renderBody = executeLogin => {\n  return (\n    <LoginForm\n      handleLogin={(email, password) => {\n        executeLogin({\n          variables: {\n            email,\n            password,\n          },\n        });\n      }}\n    />\n  );\n};\n\nconst LoginView = props => {\n  const [executeLogin, { loading, data }] = useLazyQuery(LOGIN_QUERY);\n  const enteredInvalidPassword = data && data.login && !data.login.successful;\n\n  if (!loading && data && data.login && data.login.successful) {\n    props.handleSuccessfulLogin({\n      authToken: data.login.authToken,\n      userId: data.login.userId,\n    });\n    <Route path=\"/dashboard\" />;\n  }\n\n  return (\n    <>\n      <Container\n        className=\"bg-image\"\n        style={{ backgroundImage: `url(${LoginHeroImage})` }}\n      >\n        {/* todo proper error bar  */}\n        {enteredInvalidPassword && <p>Invalid Password</p>}\n        {loading && <LoadingSpinner />}\n        {renderBody(executeLogin)}\n      </Container>\n    </>\n  );\n};\n\nexport default LoginView;\n"]},"metadata":{},"sourceType":"module"}