{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Table, Button, Tag } from 'antd';\nimport { Segment } from 'semantic-ui-react';\nvar data = [{\n  key: '1',\n  time: '2019-01-17T08:00:00Z',\n  distance: 20,\n  tags: ['vacation'],\n  startlocation: 'Sydney',\n  endlocation: 'Melbourne'\n}, {\n  key: '2',\n  time: '2019-04-17T09:52:00Z',\n  distance: 22,\n  tags: [],\n  startlocation: 'Melbourne',\n  endlocation: 'Sydney'\n}, {\n  key: '3',\n  time: '2019-05-17T12:32:00Z',\n  distance: 23,\n  tags: ['busuiness'],\n  startlocation: 'Brisbane',\n  endlocation: 'Gold Coast'\n}, {\n  key: '4',\n  time: '2019-07-17T11:00:00Z',\n  distance: 40,\n  tags: [],\n  startlocation: 'Gold Coast',\n  endlocation: 'Brisbane'\n}, {\n  key: '5',\n  time: '2019-07-21T11:33:00Z',\n  distance: 33,\n  tags: ['busuiness'],\n  startlocation: 'lennox head',\n  endlocation: 'Margaret River'\n}, {\n  key: '6',\n  time: '2019-08-01T19:41:00Z',\n  distance: 21,\n  tags: ['commute'],\n  startlocation: 'Perth',\n  endlocation: 'Adelaide'\n}, {\n  key: '7',\n  time: '2019-08-15T15:21:00Z',\n  distance: 19,\n  tags: ['commute'],\n  startlocation: 'Adelaide',\n  endlocation: 'Brisbane'\n}]; // const columns = [\n//   {\n//     title: \"Time\",\n//     dataIndex: \"time\"\n//   },\n//   {\n//     title: \"Distance\",\n//     dataIndex: \"ditance\"\n//   },\n//   {\n//     title: \"Tags\",\n//     dataIndex: \"tags\"\n//   },\n//   {\n//     title: \"Start Loocation\",\n//     dataIndex: \"startlocation\"\n//   },\n//   {\n//     title: \"End Location\",\n//     dataIndex: \"endlocation\"\n//   }\n// ];\n\nvar AntdTableComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AntdTableComponent, _React$Component);\n\n  function AntdTableComponent(props) {\n    var _this;\n\n    _classCallCheck(this, AntdTableComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AntdTableComponent).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (pagination, filters, sorter) {\n      console.log('Various parameters', pagination, filters, sorter);\n\n      _this.setState({\n        filteredInfo: filters,\n        sortedInfo: sorter\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"clearFilters\", function () {\n      _this.setState({\n        filteredInfo: null\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"clearAll\", function () {\n      _this.setState({\n        filteredInfo: null,\n        sortedInfo: null\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setTimeSort\", function () {\n      _this.setState({\n        sortedInfo: {\n          order: 'descend',\n          columnKey: 'time'\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setDistanceSort\", function () {\n      _this.setState({\n        sortedInfo: {\n          order: 'descend',\n          columnKey: 'time'\n        }\n      });\n    });\n\n    _this.state = {\n      filteredInfo: null,\n      sortedInfo: null\n    };\n    return _this;\n  }\n\n  _createClass(AntdTableComponent, [{\n    key: \"render\",\n    value: function render() {\n      {}\n      var _this$state = this.state,\n          sortedInfo = _this$state.sortedInfo,\n          filteredInfo = _this$state.filteredInfo;\n      sortedInfo = sortedInfo || {};\n      filteredInfo = filteredInfo || {};\n      var columns = [{\n        title: 'Time',\n        dataIndex: 'time',\n        key: 'time',\n        sorter: function sorter(a, b) {\n          return a.date < b.date ? -1 : a.date > b.date ? 1 : 0;\n        },\n        sortOrder: sortedInfo.columnKey === 'time' && sortedInfo.order\n      }, {\n        title: 'Distance',\n        dataIndex: 'distance',\n        key: 'distance',\n        sorter: function sorter(a, b) {\n          return a.distance - b.distance;\n        },\n        sortOrder: sortedInfo.columnKey === 'distance' && sortedInfo.order\n      }, {\n        title: 'Tags',\n        dataIndex: 'tags',\n        render: function render(tags) {\n          return __jsx(\"span\", null, tags.map(function (tag) {\n            var color = 'green';\n\n            if (tag === 'vacation') {\n              color = 'red';\n            } else if (tag === 'busuiness') {\n              color = 'blue';\n            }\n\n            return __jsx(Tag, {\n              color: color,\n              key: tag\n            }, tag.toUpperCase());\n          }));\n        },\n        key: 'tags',\n        filters: [{\n          text: 'busuiness',\n          value: 'busuiness'\n        }, {\n          text: 'vacation',\n          value: 'vacation'\n        }],\n        filteredValue: filteredInfo.tags || null,\n        onFilter: function onFilter(value, record) {\n          return record.tags.includes(value);\n        }\n      }, {\n        title: 'Start Location',\n        dataIndex: 'startlocation',\n        key: 'startlocation',\n        filters: [{\n          text: 'Sydney',\n          value: 'Sydney'\n        }, {\n          text: 'Brisbane',\n          value: 'Brisbane'\n        }],\n        filteredValue: filteredInfo.startlocation || null,\n        onFilter: function onFilter(value, record) {\n          return record.startlocation.includes(value);\n        }\n      }, {\n        title: 'End Location',\n        dataIndex: 'endlocation',\n        key: 'endlocation',\n        filters: [{\n          text: 'Sydney',\n          value: 'Sydney'\n        }, {\n          text: 'Brisbane',\n          value: 'Brisbane'\n        }],\n        filteredValue: filteredInfo.endlocation || null,\n        onFilter: function onFilter(value, record) {\n          return record.endlocation.includes(value);\n        }\n      }];\n      return __jsx(Segment, null, __jsx(\"div\", null, __jsx(\"div\", {\n        className: \"table-operations\"\n      }, __jsx(Button, {\n        onClick: this.setTimeSort\n      }, \"Sort time\"), __jsx(Button, {\n        onClick: this.setDistanceSort\n      }, \"Sort Distance\"), __jsx(Button, {\n        onClick: this.clearFilters\n      }, \"Clear filters\"), __jsx(Button, {\n        onClick: this.clearAll\n      }, \"Clear filters and sorters\")), __jsx(Table, {\n        columns: columns,\n        dataSource: data,\n        onChange: this.handleChange\n      })));\n    }\n  }]);\n\n  return AntdTableComponent;\n}(React.Component);\n\nexport default AntdTableComponent;","map":null,"metadata":{},"sourceType":"module"}