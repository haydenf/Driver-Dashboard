{"ast":null,"code":"var _jsxFileName = \"/Users/haydenfuller/Documents/Hayden/Own Projects/gofar/Driver-Dashboard/client/src/Components/Card/DiagnosticCard.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Card, Icon } from 'semantic-ui-react';\nexport default function DiagnosticCard(props) {\n  if (this.props.diagnosticIssue.length > 0) {\n    return __jsx(Card, {\n      className: \"data-cards-r1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7\n      },\n      __self: this\n    }, __jsx(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, __jsx(Icon, {\n      circular: true,\n      inverted: true,\n      color: \"red\",\n      name: \"wrench\",\n      size: \"big\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      className: \"data-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, \"Diagnostic Issues\"), __jsx(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, \"No Data\")), __jsx(Card.Content, {\n      extra: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, __jsx(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }), __jsx(\"a\", {\n      href: \"/#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, this.props.diagnosticDetail))));\n  } else {\n    return __jsx(Card, {\n      className: \"data-cards-r1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, __jsx(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, __jsx(Icon, {\n      circular: true,\n      inverted: true,\n      color: \"red\",\n      name: \"wrench\",\n      size: \"big\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      className: \"data-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Diagnostic Issues\"), __jsx(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, this.props.diagnosticIssue[0].code)), __jsx(Card.Content, {\n      extra: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, __jsx(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }), __jsx(\"a\", {\n      href: \"/#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, this.props.diagnosticDetail))));\n  }\n}","map":{"version":3,"sources":["/Users/haydenfuller/Documents/Hayden/Own Projects/gofar/Driver-Dashboard/client/src/Components/Card/DiagnosticCard.js"],"names":["React","Card","Icon","DiagnosticCard","props","diagnosticIssue","length","diagnosticDetail","code"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,mBAA3B;AAEA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC5C,MAAI,KAAKA,KAAL,CAAWC,eAAX,CAA2BC,MAA3B,GAAoC,CAAxC,EAA2C;AACzC,WACE,MAAC,IAAD;AAAM,MAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,QAAQ,MAAd;AAAe,MAAA,QAAQ,MAAvB;AAAwB,MAAA,KAAK,EAAC,KAA9B;AAAoC,MAAA,IAAI,EAAC,QAAzC;AAAkD,MAAA,IAAI,EAAC,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFF,CAFF,EAME,MAAC,IAAD,CAAM,OAAN;AAAc,MAAA,KAAK,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAG,MAAA,IAAI,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAc,KAAKF,KAAL,CAAWG,gBAAzB,CAFF,CANF,CADF,CADF;AAeD,GAhBD,MAgBO;AACL,WACE,MAAC,IAAD;AAAM,MAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,QAAQ,MAAd;AAAe,MAAA,QAAQ,MAAvB;AAAwB,MAAA,KAAK,EAAC,KAA9B;AAAoC,MAAA,IAAI,EAAC,QAAzC;AAAkD,MAAA,IAAI,EAAC,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKH,KAAL,CAAWC,eAAX,CAA2B,CAA3B,EAA8BG,IAAnC,CAFF,CAFF,EAME,MAAC,IAAD,CAAM,OAAN;AAAc,MAAA,KAAK,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAG,MAAA,IAAI,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAc,KAAKJ,KAAL,CAAWG,gBAAzB,CAFF,CANF,CADF,CADF;AAeD;AACF","sourcesContent":["import React from 'react';\nimport { Card, Icon } from 'semantic-ui-react';\n\nexport default function DiagnosticCard(props) {\n  if (this.props.diagnosticIssue.length > 0) {\n    return (\n      <Card className=\"data-cards-r1\">\n        <Card.Content>\n          <Icon circular inverted color=\"red\" name=\"wrench\" size=\"big\" />\n          <div className=\"data-content\">\n            <p>Diagnostic Issues</p>\n            <h2>No Data</h2>\n          </div>\n          <Card.Content extra>\n            <hr></hr>\n            <a href=\"/#\">{this.props.diagnosticDetail}</a>\n          </Card.Content>\n        </Card.Content>\n      </Card>\n    );\n  } else {\n    return (\n      <Card className=\"data-cards-r1\">\n        <Card.Content>\n          <Icon circular inverted color=\"red\" name=\"wrench\" size=\"big\" />\n          <div className=\"data-content\">\n            <p>Diagnostic Issues</p>\n            <h2>{this.props.diagnosticIssue[0].code}</h2>\n          </div>\n          <Card.Content extra>\n            <hr></hr>\n            <a href=\"/#\">{this.props.diagnosticDetail}</a>\n          </Card.Content>\n        </Card.Content>\n      </Card>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}