{"ast":null,"code":"var _jsxFileName = \"/home/phillip/Desktop/work/Driver-Dashboard/client/pages/dashboard.js\";\nvar __jsx = React.createElement;\nimport DashboardView from '../src/pages/Dashboard/DashboardView';\nimport React, { useState } from 'react';\nimport Cookies from 'js-cookie';\nimport Cookiez from 'next-cookies';\nimport fetch from 'node-fetch';\nimport { Redirect } from 'react-router-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport { createHttpLink } from 'apollo-link-http';\nconst link = createHttpLink({\n  uri: '/graphql',\n  fetch: fetch\n});\nexport default function DashboardPage(props) {\n  // TODO if not logged in redirect to login\n  const client = new ApolloClient({\n    uri: 'https://jt63wdhqqre6rpjo5lnylfhjqm.appsync-api.ap-southeast-2.amazonaws.com/graphql',\n    headers: {\n      Authorization: props.token,\n      UserID: props.userId,\n      'X-API-KEY': 'da2-d5trhzrnqraznclr2teue2bmmu'\n    },\n    fetch\n  });\n  return __jsx(ApolloProvider, {\n    client: client,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, __jsx(DashboardView, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }));\n}\n\nDashboardPage.getInitialProps = ctx => {\n  const token = Cookiez(ctx).GofarDashboardToken;\n  const userId = Cookiez(ctx).GofarDashboardUserId;\n  return {\n    cookiez: Cookiez(ctx) || '',\n    token,\n    userId\n  };\n};","map":{"version":3,"sources":["/home/phillip/Desktop/work/Driver-Dashboard/client/pages/dashboard.js"],"names":["DashboardView","React","useState","Cookies","Cookiez","fetch","Redirect","ApolloClient","ApolloProvider","createHttpLink","link","uri","DashboardPage","props","client","headers","Authorization","token","UserID","userId","getInitialProps","ctx","GofarDashboardToken","GofarDashboardUserId","cookiez"],"mappings":";;AAAA,OAAOA,aAAP,MAA0B,sCAA1B;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,OAAP,MAAoB,cAApB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AAEA,MAAMC,IAAI,GAAGD,cAAc,CAAC;AAAEE,EAAAA,GAAG,EAAE,UAAP;AAAmBN,EAAAA,KAAK,EAAEA;AAA1B,CAAD,CAA3B;AAEA,eAAe,SAASO,aAAT,CAAuBC,KAAvB,EAA8B;AAC3C;AAEA,QAAMC,MAAM,GAAG,IAAIP,YAAJ,CAAiB;AAC9BI,IAAAA,GAAG,EACD,qFAF4B;AAG9BI,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAEH,KAAK,CAACI,KADd;AAEPC,MAAAA,MAAM,EAAEL,KAAK,CAACM,MAFP;AAGP,mBAAa;AAHN,KAHqB;AAQ9Bd,IAAAA;AAR8B,GAAjB,CAAf;AAWA,SACE,MAAC,cAAD;AAAgB,IAAA,MAAM,EAAES,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD;;AAEDF,aAAa,CAACQ,eAAd,GAAgCC,GAAG,IAAI;AACrC,QAAMJ,KAAK,GAAGb,OAAO,CAACiB,GAAD,CAAP,CAAaC,mBAA3B;AACA,QAAMH,MAAM,GAAGf,OAAO,CAACiB,GAAD,CAAP,CAAaE,oBAA5B;AACA,SAAO;AACLC,IAAAA,OAAO,EAAEpB,OAAO,CAACiB,GAAD,CAAP,IAAgB,EADpB;AAELJ,IAAAA,KAFK;AAGLE,IAAAA;AAHK,GAAP;AAKD,CARD","sourcesContent":["import DashboardView from '../src/pages/Dashboard/DashboardView';\nimport React, {useState} from 'react';\nimport Cookies from 'js-cookie';\nimport Cookiez from 'next-cookies';\nimport fetch from 'node-fetch';\nimport { Redirect } from 'react-router-dom';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport { createHttpLink } from 'apollo-link-http';\n\nconst link = createHttpLink({ uri: '/graphql', fetch: fetch });\n\nexport default function DashboardPage(props) {\n  // TODO if not logged in redirect to login\n\n  const client = new ApolloClient({\n    uri:\n      'https://jt63wdhqqre6rpjo5lnylfhjqm.appsync-api.ap-southeast-2.amazonaws.com/graphql',\n    headers: {\n      Authorization: props.token,\n      UserID: props.userId,\n      'X-API-KEY': 'da2-d5trhzrnqraznclr2teue2bmmu',\n    },\n    fetch,\n  });\n\n  return (\n    <ApolloProvider client={client}>\n      <DashboardView />\n    </ApolloProvider>\n  );\n}\n\nDashboardPage.getInitialProps = ctx => {\n  const token = Cookiez(ctx).GofarDashboardToken;\n  const userId = Cookiez(ctx).GofarDashboardUserId;\n  return {\n    cookiez: Cookiez(ctx) || '',\n    token,\n    userId\n  };\n};\n"]},"metadata":{},"sourceType":"module"}