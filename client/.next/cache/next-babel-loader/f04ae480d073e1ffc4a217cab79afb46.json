{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/home/phillip/Desktop/work/Driver-Dashboard/client/pages/login.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport fetch from 'node-fetch';\nimport Cookies from 'js-cookie';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport { Redirect } from 'react-router-dom';\nimport LoginView from '../src/pages/Login/LoginView';\nimport { useRouter } from 'next/router'; // import 'semantic-ui-css/semantic.min.css';\n// import '../src/styles/App.css';\n\nfunction handleSuccessfulLogin(router) {\n  return function (loginResult) {\n    Cookies.set('GofarDashboardUserId', loginResult.userId, {\n      expires: 7\n    });\n    Cookies.set('GofarDashboardToken', loginResult.authToken, {\n      expires: 7\n    });\n    router.push('/dashboard');\n  };\n}\n\nexport default function LoginPage(props) {\n  if (props.authToken) {\n    return __jsx(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    });\n  }\n\n  const router = useRouter();\n  const client = new ApolloClient({\n    uri: 'https://jt63wdhqqre6rpjo5lnylfhjqm.appsync-api.ap-southeast-2.amazonaws.com/graphql',\n    headers: {\n      Authorization: props.authToken,\n      'X-API-KEY': 'da2-d5trhzrnqraznclr2teue2bmmu'\n    },\n    fetch\n  });\n  return __jsx(ApolloProvider, {\n    client: client,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(LoginView, _extends({}, props, {\n    handleSuccessfulLogin: handleSuccessfulLogin(router),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  })));\n}\n\nLoginPage.getInitialProps = ctx => {\n  console.log(ctx.req.cookie);\n  return {\n    cookies: ctx.req.cookie\n  };\n};","map":{"version":3,"sources":["/home/phillip/Desktop/work/Driver-Dashboard/client/pages/login.js"],"names":["React","fetch","Cookies","ApolloClient","ApolloProvider","Redirect","LoginView","useRouter","handleSuccessfulLogin","router","loginResult","set","userId","expires","authToken","push","LoginPage","props","client","uri","headers","Authorization","getInitialProps","ctx","console","log","req","cookie","cookies"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,SAASC,SAAT,QAA0B,aAA1B,C,CAEA;AACA;;AAEA,SAASC,qBAAT,CAA+BC,MAA/B,EAAuC;AACrC,SAAO,UAASC,WAAT,EAAsB;AAC3BR,IAAAA,OAAO,CAACS,GAAR,CAAY,sBAAZ,EAAoCD,WAAW,CAACE,MAAhD,EAA0D;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAA1D;AACAX,IAAAA,OAAO,CAACS,GAAR,CAAY,qBAAZ,EAAmCD,WAAW,CAACI,SAA/C,EAA0D;AAAED,MAAAA,OAAO,EAAE;AAAX,KAA1D;AACAJ,IAAAA,MAAM,CAACM,IAAP,CAAY,YAAZ;AACD,GAJD;AAKD;;AAED,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACvC,MAAIA,KAAK,CAACH,SAAV,EAAqB;AACnB,WAAO,MAAC,QAAD;AAAU,MAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,QAAML,MAAM,GAAGF,SAAS,EAAxB;AAEA,QAAMW,MAAM,GAAG,IAAIf,YAAJ,CAAiB;AAC9BgB,IAAAA,GAAG,EACD,qFAF4B;AAG9BC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAEJ,KAAK,CAACH,SADd;AAEP,mBAAa;AAFN,KAHqB;AAO9Bb,IAAAA;AAP8B,GAAjB,CAAf;AASA,SACE,MAAC,cAAD;AAAgB,IAAA,MAAM,EAAEiB,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD,eACMD,KADN;AAEE,IAAA,qBAAqB,EAAET,qBAAqB,CAACC,MAAD,CAF9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CADF;AAQD;;AAEDO,SAAS,CAACM,eAAV,GAA4BC,GAAG,IAAI;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,GAAJ,CAAQC,MAApB;AACA,SAAO;AACLC,IAAAA,OAAO,EAAEL,GAAG,CAACG,GAAJ,CAAQC;AADZ,GAAP;AAGD,CALD","sourcesContent":["import React from 'react';\nimport fetch from 'node-fetch';\nimport Cookies from 'js-cookie';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport { Redirect } from 'react-router-dom';\nimport LoginView from '../src/pages/Login/LoginView';\nimport { useRouter } from 'next/router';\n\n// import 'semantic-ui-css/semantic.min.css';\n// import '../src/styles/App.css';\n\nfunction handleSuccessfulLogin(router) {\n  return function(loginResult) {\n    Cookies.set('GofarDashboardUserId', loginResult.userId  , { expires: 7 });\n    Cookies.set('GofarDashboardToken', loginResult.authToken, { expires: 7 });\n    router.push('/dashboard');\n  };\n}\n\nexport default function LoginPage(props) {\n  if (props.authToken) {\n    return <Redirect to=\"/\" />;\n  }\n\n  const router = useRouter();\n\n  const client = new ApolloClient({\n    uri:\n      'https://jt63wdhqqre6rpjo5lnylfhjqm.appsync-api.ap-southeast-2.amazonaws.com/graphql',\n    headers: {\n      Authorization: props.authToken,\n      'X-API-KEY': 'da2-d5trhzrnqraznclr2teue2bmmu',\n    },\n    fetch,\n  });\n  return (\n    <ApolloProvider client={client}>\n      <LoginView\n        {...props}\n        handleSuccessfulLogin={handleSuccessfulLogin(router)}\n      />\n    </ApolloProvider>\n  );\n}\n\nLoginPage.getInitialProps = ctx => {\n  console.log(ctx.req.cookie);\n  return {\n    cookies: ctx.req.cookie,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}