{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { getDashboardAllDataQuery, getUserDataQuery } from '../queries/queries';\nimport LoadingSpinner from './LoadingSpinner';\nimport { Statistic, Header, Divider } from 'semantic-ui-react';\nexport default function DashboardHeader(props) {\n  const {\n    loading: carLoading,\n    error: carError,\n    data: carData\n  } = useQuery(getDashboardAllDataQuery, {\n    variables: {\n      vehicleId: props.vehicleIdState.value\n    }\n  });\n  const {\n    error: userError,\n    data: userData\n  } = useQuery(getUserDataQuery);\n\n  if (carLoading) {\n    return __jsx(LoadingSpinner, null);\n  } else if (carError, userError) {\n    return __jsx(\"p\", null, \"Error! \", (carError, userError));\n  } else {\n    return __jsx(\"div\", {\n      className: \"hero-img\"\n    }, __jsx(Header, {\n      as: \"h1\"\n    }, \"Welcome back! \", userData.firstName), __jsx(\"div\", {\n      className: \"hero-img-car-data\"\n    }, __jsx(\"h3\", {\n      style: {\n        color: \"#fff\"\n      }\n    }, carData.car.make, \" \", carData.car.model, \"'s Lifetime Statistics from GOFAR\"), __jsx(Divider, {\n      hidden: true\n    }), __jsx(Statistic.Group, {\n      size: \"mini\"\n    }, __jsx(Statistic, null, __jsx(Statistic.Value, null, carData.car.trips.length), __jsx(Statistic.Label, null, \" Total trips \")), __jsx(Statistic, null, __jsx(Statistic.Value, null, carData.car.travelDistanceTotal, \" KM\"), __jsx(Statistic.Label, null, \"Total Distance\")), __jsx(Statistic, null, __jsx(Statistic.Value, null, carData.car.timeInCar, \" \"), __jsx(Statistic.Label, null, \"Time in Car (hrs) \")), __jsx(Statistic, null, __jsx(Statistic.Value, null, Math.floor(carData.car.odometer), \" KM\"), __jsx(Statistic.Label, null, \"Current Odometer\")))));\n  }\n}","map":null,"metadata":{},"sourceType":"module"}