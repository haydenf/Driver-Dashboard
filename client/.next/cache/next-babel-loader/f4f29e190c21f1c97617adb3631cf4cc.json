{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport fetch from 'node-fetch';\nimport Cookies from 'js-cookie';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport { Redirect } from 'react-router-dom';\nimport LoginView from '../src/pages/Login/LoginView';\nimport { useRouter } from 'next/router';\n\nfunction handleSuccessfulLogin(router) {\n  return function (loginResult) {\n    Cookies.set('GofarDashboardUserId', loginResult.userId, {\n      expires: 7\n    });\n    Cookies.set('GofarDashboardToken', loginResult.authToken, {\n      expires: 7\n    });\n    router.push('/dashboard');\n  };\n}\n\nexport default function LoginPage(props) {\n  if (props.authToken) {\n    return __jsx(Redirect, {\n      to: \"/\"\n    });\n  }\n\n  var router = useRouter();\n  var client = new ApolloClient({\n    uri: 'https://jt63wdhqqre6rpjo5lnylfhjqm.appsync-api.ap-southeast-2.amazonaws.com/graphql',\n    headers: {\n      Authorization: props.authToken,\n      'X-API-KEY': 'da2-d5trhzrnqraznclr2teue2bmmu'\n    },\n    fetch: fetch\n  });\n  return __jsx(ApolloProvider, {\n    client: client\n  }, __jsx(LoginView, _extends({}, props, {\n    handleSuccessfulLogin: handleSuccessfulLogin(router)\n  })));\n}\n\nLoginPage.getInitialProps = function (ctx) {\n  console.log(ctx.req.cookie);\n  return {\n    cookies: ctx.req.cookie\n  };\n};","map":null,"metadata":{},"sourceType":"module"}